local livetext = require "livetext"
local coor = require "livetext/coor"
local pipe = require "livetext/pipe"
local func = require "livetext/func"


local function keys(ls)
    local keys = pipe.new
    for k,v in pairs(ls) do
        keys = keys / k
    end
    return keys
end


local unpack = table.unpack

local updateFn = function(params)
    local _ =
        pipe.new
        * game.interface.getEntities({pos = {0, 0}, radius = 900000})
        * pipe.map(game.interface.getEntity)
        * pipe.filter(function(data) return data.fileName and string.match(data.fileName, "platform_signs_remover.con") end)
        * pipe.forEach(function(data)
            local _ = pipe.new
                * game.interface.getEntities({pos = data.position, radius = 300}, {type = "ASSET_GROUP", includeData = false})
                * pipe.map(game.interface.getEntity)
                * pipe.filter(function(e) return 
                    e.models 
                    and #(keys(e.models) * pipe.filter(function(k) return k:match("platform_signs_left.mdl") end)) > 0 end)
                * pipe.forEach(function(e) game.interface.bulldoze(e.id) end)
                game.interface.bulldoze(data.id)
        end)
    local result = game.config.construction["platform_signs/station_name_asset.con"](func.with(params, {text = "?"}))
    return result
end

function data()
    return {
        type = "RAIL_DEPOT",
        description = {
            name = _("Platform Sign Remover"),
            description = _("Use this tool to remove already built platform signs, the effective zones are R500m circles around any un-finished platform signs.")
        },
        buildMode = "SINGLE",
        categories = {"misc"},
        availability = {
            yearFrom = 0,
            yearTo = 0,
        },
        order = 27228,
        skipCollision = true,
        autoRemovable = false,
        params = {},
        updateFn = updateFn
    }
end
